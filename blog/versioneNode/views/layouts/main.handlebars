<!doctype html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="A layout example that shows off a blog page with a list of posts.">
    <title>{{metadata.title}}</title>

    <link rel="stylesheet" href="https://unpkg.com/purecss@1.0.0/build/pure-min.css" integrity="sha384-" crossorigin="anonymous">

    <!--[if lte IE 8]>
        <link rel="stylesheet" href="https://unpkg.com/purecss@1.0.0/build/grids-responsive-old-ie-min.css">
    <![endif]-->
    <!--[if gt IE 8]><!-->
        <link rel="stylesheet" href="https://unpkg.com/purecss@1.0.0/build/grids-responsive-min.css">
    <!--<![endif]-->


        <!--[if lte IE 8]>
            <link rel="stylesheet" href="css/layouts/blog-old-ie.css">
        <![endif]-->
        <!--[if gt IE 8]><!-->
            <link rel="stylesheet" href="stylesheets/layouts/blog.css">
            <link rel="stylesheet" href="stylesheets/layouts/login.css">
        <!--<![endif]-->
        <script type="text/javascript" src="javascripts/underscore-min.js"></script>
</head>
<body>


<div id="layout" class="pure-g">
    <div id="sidebar" class="sidebar pure-u-1 pure-u-md-1-4">
        <div class="header">
            <h1 class="brand-title">{{metadata.title}}</h1>
            <h2 class="brand-tagline">Naviga per provincia</h2>

            <nav class="nav">
                <ul class="nav-list">
                    <li class="nav-item">
                        <a class="pure-button" href="http://purecss.io">Pure</a>
                    </li>
                    <li class="nav-item">
                        <a class="pure-button" href="http://yuilibrary.com">YUI Library</a>
                    </li>
                </ul>
            </nav>
        </div>
    </div>

{{{body}}}

</body>

<script type="text/javascript">

//function cook(){alert(document.cookie)}
//var xss = "<img src='http://fakeurl' onerror='cook()'>";
//var txt = document.createTextNode(xss);
// var d = new Date();
// var color = "#" + d.getHours() + d.getMinutes() + d.getSeconds();

function Iridiscient(target,interval,corbase){
  this.target = target;
  this.interval = interval;
  this.corbase = corbase;
  this.corval = function(){
    var corval = [];
    for(var i=0; i <=255; i++){
      corval[i] = this.corbase + i.toString(16);
    }
    return corval;
  }
}

Iridiscient.prototype.start = function(val){
  if(val >= 0 && val < 255){return val;}
  else{throw new Error('Parameter not valid')}
};

var iri = new Iridiscient("sidebar",1000,"#9832");

// var iridiscient = {
//   target: "sidebar",
//   interval: 1000,
//   corbase: "#6699",
//   corval: function(){
//     var corval = [];
//     for(var i=0; i<=255; i++){
//       corval[i] = this.corbase + i.toString(16);
//     }
//     return corval;
//   }
// };

function changecolor(index){
setTimeout(function(){

 // console.log(iri.corval()[index]);
  document.getElementById(iri.target).style.backgroundColor = iri.corval()[index];
  //var el = document.querySelectorAll(".post-description")[0];
  //var txt = document.createTextNode(iri.corval()[index]);
  //el.removeChild(el.childNodes[0]);
  //el.appendChild(txt);
  //console.log(iri.corval()[index]);
  if(0<=index && index <255){index = index +1;}
  else{index = 0;}
  changecolor(index);
},iri.interval);

}

changecolor(iri.start(250));
</script>

<!-- L'import di uno script è possibile con ES6 ma è soggetto a precise limitazioni. Ad esempio è necessario importare lo script in una sezione di tipo module e scegliere se gli header debbano essere inclusi nella chiamata attraverso l'attributo crossorigin-->
<!-- <script type="module" crossorigin="anonymous">
    import {template} from './template.js';
    var view = template();
</script> -->

<script type="text/javascript" src="javascripts/script.js"></script>

<script>

      function initMap() {

        var map = new google.maps.Map(document.getElementById('map'), {
          zoom: 8,
          center: {lat: 45, lng: 10}
        });

        // Create an array of alphabetical characters used to label the markers.
        var labels = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';

        // Add some markers to the map.
        // Note: The code uses the JavaScript Array.prototype.map() method to
        // create an array of markers based on a given "locations" array.
        // The map() method here has nothing to do with the Google Maps API.
        console.log(locations);
        var markers = locations.map(function(location, i) {
          return new google.maps.Marker({
            position: location,
            label: labels[i % labels.length]
          });
        });

        // Add a marker clusterer to manage the markers.
        var markerCluster = new MarkerClusterer(map, markers,
            {imagePath: 'https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m'});
      }
</script>

<script src="https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/markerclusterer.js">
</script>

<script async defer
   src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAymd_hyKvWoJFgB8bP6n-1HStQJIjWdVo&callback=initMap">
</script>

</html>
